# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    # lance toute les semaine
    - cron:  '0 0 * * 0'

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest spotipy
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    # - name: Test with pytest
    #   env: # Or as an environment variable
    #     super_secret: ${{ secrets.KEY1}}
    #     super_secret2: ${{ secrets.CLIEN_SECRET}}
    #   run: |
    #     python spotifytest.py --client_id super_secret --client_secret $super_secret2 --username grimgort --complete

    - name: Run Python script with pytest and stream logs
      uses: actions/github-script@v7
      with:
        script: |
          const exec2 = require('child_process').exec;
          const child = exec2('python spotifytest.py --client_id ${{ secrets.KEY1 }} --client_secret ${{ secrets.CLIEN_SECRET }} --username grimgort --complete', { maxBuffer: 1024 * 1024 });

          child.stdout.on('data', function(data) {
            console.log(data.toString());
          });

          child.stderr.on('data', function(data) {
            console.error(data.toString());
          });

          child.on('exit', function(code) {
            console.log('Child process exited with exit code ' + code);
          });

    - name: Upload Log File as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: spotilog
        path: spotilog.txt
